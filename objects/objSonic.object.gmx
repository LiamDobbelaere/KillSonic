<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSonicWalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 1;
hsp = 0.1;
vsp = 0;
jumpspeed = 16;
movespeed = 16;
grounded = false;
rings = 0;
flash = false;
grounded_since_flash = true;
dead = false;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objBossRoom) {
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stage clear
audio_stop_sound(sndBossBattle);
audio_play_sound(sndStageClear, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alive code
if (!dead) {
    //EGG-NAV Sonic AI code
    key_left = 0;
    key_right = 0;
    key_jump = 0;
    
    if (flash || rings == 0) {
        if (x &gt; objEggBase01.x) {
            key_left = 0;
            key_right = 1;
        } else {
            key_left = -1;
            key_right = 0;    
        }
    } else {
        if (x &gt; objEggBase01.x) {
            key_left = -1;
            key_right = 0;
        } else {
            key_left = 0;
            key_right = 1;
        }
    }
    
    
    hazard_near = instance_nearest(x, y, objComponent);
    hazard_jump = false;
    hazard_dodge = false;
    
    if (hazard_near != noone) {
        hazard_jump = point_distance(hazard_near.x, hazard_near.y, x, y) &lt; 200; 
        
        if (!grounded &amp;&amp; vsp &gt; 0 &amp;&amp; hazard_jump) {
            if (x &gt; hazard_near.x) {
                key_left = 0;
                key_right = 1;    
            } else {
                key_left = -1;
                key_right = 0;
            }
        }   
    }
    key_jump = abs(x - objEggBase01.x) &lt; 100 || hazard_jump;
    
    if (!grounded_since_flash) {
        key_left = 0;
        key_right = 0;
        key_jump = 0;
    }
    
    //key_left = -keyboard_check(vk_left);
    //key_right = keyboard_check(vk_right);
    //key_jump = keyboard_check_pressed(vk_space);
    
    move = key_left + key_right;
    
    if (grounded)
    hsp = lerp(hsp, move * movespeed, 0.06) - 0.5;
    else
    hsp = lerp(hsp, move * movespeed, 0.2) - 0.5;
    
    if (vsp &lt; 10) vsp += grav;
    
    if (place_meeting(x, y + 1, objWall)) {
        vsp = key_jump * -jumpspeed;
        
        grounded_since_flash = true;
        grounded = true;
    } else {
        if (grounded &amp;&amp; vsp &lt; 0) {
            audio_play_sound(sndSonicJump, 1, false);
        }    
    
        grounded = false;
    }
    
    if (place_meeting(x + hsp, y, objWall)) {
        while (!place_meeting(x + sign(hsp), y, objWall)) {
            x += sign(hsp);
        }
        
        hsp = 0;
    }
    
    x += hsp;
    x = clamp(x, 10, room_width - 10);
    
    if (place_meeting(x, y + vsp, objWall)) {
        while (!place_meeting(x, y + sign(vsp), objWall)) {
            y += sign(vsp);
        }
        
        vsp = 0;
    }
    
    if (place_meeting(x, y + vsp, objEggBase01)) {
        if (!objEggBase01.flash) {
            objEggBase01.bhealth--;
            
            if (objEggBase01.bhealth == 0) {
                alarm[2] = room_speed * 4;
            }
            
            audio_play_sound(sndBossHit, 1, false);
            vsp *= -1;
            with (objEggBase01) {
                event_user(1);
            }
        }
    }
    
    y += vsp;
    
    if (!grounded) {
        if (flash &amp;&amp; !grounded_since_flash) {
            sprite_index = sprSonicHurt;
        } else {
            sprite_index = sprSonicJump;
        }
        image_speed = 1;
    }
    else if (hsp &gt; 4) {
        sprite_index = sprSonicRun;
        image_speed = 1;
    } else {
        sprite_index = sprSonicWalk;
        image_speed = 0.2 + abs(hsp) / movespeed;
    }
    
    image_speed *= sign(hsp);
    
    if (flash) {
        visible = !visible;
    } else {
        visible = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dead code

if (dead) {
    sprite_index = sprSonicDie;
    vsp += grav;
    y+=vsp;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaserHit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaserBeam">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSpike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDrill">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPoker">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ring loss

if (flash) exit;

if (rings &gt; 0) {
    vsp = -12;
    hsp = -12;
    audio_play_sound(sndRingLoss, 1, false);
    rings = 0;
    flash = true;
    grounded_since_flash = false;
    alarm[0] = room_speed * 3;
} else {
    if (!dead) {
        audio_play_sound(sndSonicDie, 1, false);
        dead = true;
        alarm[1] = room_speed * 3;    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

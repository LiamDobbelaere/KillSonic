<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSonicWalk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 1;
hsp = 0.1;
vsp = 0;
jumpspeed = 16;
movespeed = 16;
grounded = false;
rings = 0;
flash = false;
grounded_since_flash = true;
dead = false;
eggnav_state_running = "EGG-NAV-R INITIALIZED"
eggnav_state_jumping = "EGG-NAV-J INITIALIZED"


ai_initialize()

image_speed = 0;

fire_once = false

alarm_0_t = 0;
alarm_0_f = true;

alarm_1_t = 0;
alarm_1_f = true;

alarm_2_t = 0;
alarm_2_f = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

alarm_0_t -= global.dt;
if (alarm_0_t &lt;= 0 &amp;&amp; !alarm_0_f) {
    flash = false;

    alarm_0_f = true;
}

alarm_1_t -= global.dt;
if (alarm_1_t &lt;= 0 &amp;&amp; !alarm_1_f) {
    ///Stage clear
    audio_stop_sound(sndBossBattle);
    audio_play_sound(sndStageClear, 1, false);    

    alarm_1_f = true;
}

alarm_2_t -= global.dt;
if (alarm_2_t &lt;= 0 &amp;&amp; !alarm_2_f) {
    with (objBossRoom) {
        event_user(0);
    }

    alarm_2_f = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Character skin setter
if (!fire_once) {
    tails = false;

    if (global.play_against_flag == 1) {
        tails = true;
    } else if (global.play_against_flag == 2) {
        var i = instance_create(x, y, objSonic);
        i.tails = true;
        i.fire_once = true;
    }

    fire_once = true;
}

if (tails) {
    sprite_walk = sprTailsWalk
    sprite_run = sprTailsRun
    sprite_jump = sprTailsJump
    sprite_hurt = sprTailsHurt
    sprite_die = sprTailsDie
} else {
    sprite_walk = sprSonicWalk
    sprite_run = sprSonicRun
    sprite_jump = sprSonicJump
    sprite_hurt = sprSonicHurt
    sprite_die = sprSonicDie
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alive code

if (!dead) {
    //EGG-NAV Sonic AI code
    key_left = 0;
    key_right = 0;
    key_jump = 0;
    
    if (global.sonic_ai_flag == 1 &amp;&amp; !tails || global.tails_ai_flag == 1 &amp;&amp; tails) ai_think()
    
    if (!grounded_since_flash) {
        key_left = 0;
        key_right = 0;
        key_jump = 0;
    }
    
    if (global.sonic_ai_flag == 0 &amp;&amp; !tails || global.tails_ai_flag == 0 &amp;&amp; tails) {
        if (tails &amp;&amp; global.play_against_flag == 2) {
            key_left = -keyboard_check(ord("Q"));
            key_right = keyboard_check(ord("D"));
            key_jump = keyboard_check_pressed(vk_lshift);    
        } else {
            key_left = -keyboard_check(vk_left);
            key_right = keyboard_check(vk_right);
            key_jump = keyboard_check_pressed(vk_space);    
        }
    }
    
    move = key_left + key_right;
    
    if (grounded)
    hsp = lerp(hsp, move * movespeed, 1.8 * global.dt) - 30*0.5*global.dt; //0.06 for 30fps
    else
    hsp = lerp(hsp, move * movespeed, 6 * global.dt) - 30*0.5*global.dt; //0.2 for 30fps
    
    if (vsp &lt; 10) vsp += (30 * grav) * global.dt;
    
    if (place_meeting(x, y + 1, objWall)) {
        vsp = key_jump * -jumpspeed;
        
        grounded_since_flash = true;
        grounded = true;
    } else {
        if (grounded &amp;&amp; vsp &lt; 0) {
            audio_play_sound(sndSonicJump, 1, false);
        }    
    
        grounded = false;
    }
    
    if (place_meeting(x + hsp, y, objWall)) {
        while (!place_meeting(x + sign(hsp), y, objWall)) {
            x += (30 * sign(hsp)) * global.dt;
        }
        
        hsp = 0;
    }
    
    x += (30 * hsp) * global.dt;
    x = clamp(x, 10, room_width - 10);
    
    if (place_meeting(x, y + vsp, objWall)) {
        while (!place_meeting(x, y + sign(vsp), objWall)) {
            y += (30 * sign(vsp)) * global.dt;
        }
        
        vsp = 0;
    }
    
    if (place_meeting(x, y + vsp, objEggBase01)) {
        if (!objEggBase01.flash &amp;&amp; grounded_since_flash) {
            objEggBase01.bhealth--;
            
            if (objEggBase01.bhealth == 0) {
                alarm_2_t = 4;
                alarm_2_f = false;
            }
            
            audio_play_sound(sndBossHit, 1, false);
            vsp *= -1;
            with (objEggBase01) {
                event_user(1);
            }
        }
    }
    
    y += (30 * vsp) * global.dt;
    
    if (!grounded) {
        if (flash &amp;&amp; !grounded_since_flash) {
            sprite_index = sprite_hurt;
        } else {
            sprite_index = sprite_jump;
        }
        image_speed = 30 * global.dt;
    }
    else if (hsp &gt; 4) {
        sprite_index = sprite_run;
        image_speed = 30 * global.dt;
    } else {
        sprite_index = sprite_walk;
        image_speed = (30 * (0.2 + abs(hsp) / movespeed)) * global.dt;
    }
    
    image_speed *= sign(hsp);
    
    if (flash) {
        visible = !visible;
    } else {
        visible = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dead code

if (dead) {
    sprite_index = sprite_die;
    vsp += (30 * grav) * global.dt;
    y += (30 * vsp) * global.dt;  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaserHit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLaserBeam">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSpike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDrill">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPoker">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ring loss

if (flash) exit;

if (rings &gt; 0) {
    vsp = -12;
    hsp = -12;
    audio_play_sound(sndRingLoss, 1, false);
    rings = 0;
    flash = true;
    grounded_since_flash = false;
    
    alarm_0_t = 3;
    alarm_0_f = false;
} else {
    if (!dead) {
        audio_play_sound(sndSonicDie, 1, false);
        dead = true;
        
        alarm_1_t = 3;
        alarm_1_f = false;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_alpha(1);
draw_set_font(global.font_outline);
draw_set_halign(fa_left);
draw_set_color(c_aqua);
draw_text_transformed(8, 8, "SONICS EGG-NAV 2", 4, 4, 0);
draw_set_color(c_lime);
draw_text_transformed(8, 64, eggnav_state_running, 4, 4, 0);
draw_set_color(c_yellow);
draw_text_transformed(8, 128, eggnav_state_jumping, 4, 4, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
